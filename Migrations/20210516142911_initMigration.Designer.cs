// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rema1000ApiProject.Context;

namespace Rema1000ApiProject.Migrations
{
    [DbContext(typeof(Rema1000Context))]
    [Migration("20210516142911_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rema1000ApiProject.Models.Address", b =>
                {
                    b.Property<Guid>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.ContactPerson", b =>
                {
                    b.Property<Guid>("ContactPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactSupplierSupplierID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactPersonID");

                    b.HasIndex("ContactSupplierSupplierID");

                    b.ToTable("ContactPeople");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.MeasurementUnit", b =>
                {
                    b.Property<Guid>("MeasurementUnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MeasurementUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeasurementUnitID");

                    b.ToTable("MeasurementUnits");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.Product", b =>
                {
                    b.Property<Guid>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductSupplierSupplierID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TypeProductTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitMeasurementUnitID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("ProductSupplierSupplierID");

                    b.HasIndex("TypeProductTypeID");

                    b.HasIndex("UnitMeasurementUnitID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.ProductType", b =>
                {
                    b.Property<Guid>("ProductTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeID");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.Supplier", b =>
                {
                    b.Property<Guid>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.Address", b =>
                {
                    b.HasOne("Rema1000ApiProject.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.ContactPerson", b =>
                {
                    b.HasOne("Rema1000ApiProject.Models.Supplier", "ContactSupplier")
                        .WithMany()
                        .HasForeignKey("ContactSupplierSupplierID");

                    b.Navigation("ContactSupplier");
                });

            modelBuilder.Entity("Rema1000ApiProject.Models.Product", b =>
                {
                    b.HasOne("Rema1000ApiProject.Models.Supplier", "ProductSupplier")
                        .WithMany()
                        .HasForeignKey("ProductSupplierSupplierID");

                    b.HasOne("Rema1000ApiProject.Models.ProductType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeProductTypeID");

                    b.HasOne("Rema1000ApiProject.Models.MeasurementUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitMeasurementUnitID");

                    b.Navigation("ProductSupplier");

                    b.Navigation("Type");

                    b.Navigation("Unit");
                });
#pragma warning restore 612, 618
        }
    }
}
